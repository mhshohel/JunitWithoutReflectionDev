Report Type: Sorted
_________________________


NODES
_____________________
Total Nodes: 135

dreamer.Matrix.<init>(dv103.QRing[][])void
dreamer.Matrix.<init>(int,int)void
dreamer.Matrix.columns()int
dreamer.Matrix.equals(java.lang.Object)boolean
dreamer.Matrix.getColumn(int)dv103.QRMatrix
dreamer.Matrix.getCopy()dv103.QRMatrix
dreamer.Matrix.getElementAt(int,int)dv103.QRing
dreamer.Matrix.getRow(int)dv103.QRMatrix
dreamer.Matrix.getTranspose()dv103.QRMatrix
dreamer.Matrix.hashCode()int
dreamer.Matrix.isDiagonal()boolean
dreamer.Matrix.isSquare()boolean
dreamer.Matrix.isSymmetric()boolean
dreamer.Matrix.mult(dv103.QRMatrix)dv103.QRMatrix
dreamer.Matrix.plus(dv103.QRMatrix)dv103.QRMatrix
dreamer.Matrix.rows()int
dreamer.Matrix.setElementAt(dv103.QRing,int,int)void
dreamer.Matrix.sparseness()double
dreamer.Matrix.toString()java.lang.String
dreamer.SquareMatrix.<init>(dv103.Ring[][])void
dreamer.SquareMatrix.<init>(int)void
dreamer.SquareMatrix.equals(java.lang.Object)boolean
dreamer.SquareMatrix.getColumn(int)dv103.QRMatrix
dreamer.SquareMatrix.getCopy()dv103.RMatrix
dreamer.SquareMatrix.getCopy()java.lang.Object
dreamer.SquareMatrix.getElementAt(int,int)dv103.Ring
dreamer.SquareMatrix.getNull()dv103.RMatrix
dreamer.SquareMatrix.getNull()java.lang.Object
dreamer.SquareMatrix.getOne()dv103.RMatrix
dreamer.SquareMatrix.getOne()java.lang.Object
dreamer.SquareMatrix.getRow(int)dv103.QRMatrix
dreamer.SquareMatrix.getTranspose()dv103.RMatrix
dreamer.SquareMatrix.hashCode()int
dreamer.SquareMatrix.isDiagonal()boolean
dreamer.SquareMatrix.isNull()boolean
dreamer.SquareMatrix.isSymmetric()boolean
dreamer.SquareMatrix.minus(dv103.RMatrix)dv103.RMatrix
dreamer.SquareMatrix.minus(java.lang.Object)java.lang.Object
dreamer.SquareMatrix.mult(dv103.RMatrix)dv103.RMatrix
dreamer.SquareMatrix.mult(java.lang.Object)java.lang.Object
dreamer.SquareMatrix.negative()dv103.RMatrix
dreamer.SquareMatrix.negative()java.lang.Object
dreamer.SquareMatrix.plus(dv103.RMatrix)dv103.RMatrix
dreamer.SquareMatrix.plus(java.lang.Object)java.lang.Object
dreamer.SquareMatrix.setElementAt(dv103.Ring,int,int)void
dreamer.SquareMatrix.size()int
dreamer.SquareMatrix.sparseMult(dv103.RMatrix)dreamer.SquareMatrix
dreamer.SquareMatrix.sparseness()double
dreamer.SquareMatrix.toString()java.lang.String
dv103.Int.<clinit>()void
dv103.Int.<init>(int)void
dv103.Int.equals(java.lang.Object)boolean
dv103.Int.getCopy()dv103.Int
dv103.Int.getCopy()java.lang.Object
dv103.Int.getNull()dv103.Int
dv103.Int.getNull()java.lang.Object
dv103.Int.getOne()dv103.Int
dv103.Int.getOne()java.lang.Object
dv103.Int.hashCode()int
dv103.Int.minus(dv103.Int)dv103.Int
dv103.Int.minus(java.lang.Object)java.lang.Object
dv103.Int.mult(dv103.Int)dv103.Int
dv103.Int.mult(java.lang.Object)java.lang.Object
dv103.Int.negative()dv103.Int
dv103.Int.negative()java.lang.Object
dv103.Int.plus(dv103.Int)dv103.Int
dv103.Int.plus(java.lang.Object)java.lang.Object
dv103.Int.toString()java.lang.String
dv103.Int.value()int
dv103.NotCompatibleException.<init>(java.lang.String)void
dv103.Real.<clinit>()void
dv103.Real.<init>(double)void
dv103.Real.equals(java.lang.Object)boolean
dv103.Real.getCopy()dv103.Real
dv103.Real.getCopy()java.lang.Object
dv103.Real.getNull()dv103.Real
dv103.Real.getNull()java.lang.Object
dv103.Real.getOne()dv103.Real
dv103.Real.getOne()java.lang.Object
dv103.Real.hashCode()int
dv103.Real.minus(dv103.Real)dv103.Real
dv103.Real.minus(java.lang.Object)java.lang.Object
dv103.Real.mult(dv103.Real)dv103.Real
dv103.Real.mult(java.lang.Object)java.lang.Object
dv103.Real.negative()dv103.Real
dv103.Real.negative()java.lang.Object
dv103.Real.plus(dv103.Real)dv103.Real
dv103.Real.plus(java.lang.Object)java.lang.Object
dv103.Real.toString()java.lang.String
dv103.Real.value()double
dv103.benchmark.BenchmarkMain.<init>()void
dv103.benchmark.BenchmarkMain.main(java.lang.String[])void
dv103.benchmark.MatrixBenchmark.<init>(int)void
dv103.benchmark.MatrixBenchmark.applyMisc(dv103.RMatrix)boolean
dv103.benchmark.MatrixBenchmark.applyOps(dv103.RMatrix)dv103.RMatrix
dv103.benchmark.MatrixBenchmark.createDenseMultiply()dv103.RMatrix[]
dv103.benchmark.MatrixBenchmark.createSparseMultiply()dv103.RMatrix[]
dv103.benchmark.MatrixBenchmark.gcMem()java.lang.String
dv103.benchmark.MatrixBenchmark.mem()java.lang.String
dv103.benchmark.MatrixBenchmark.runGeneralPerformance()double
dv103.benchmark.MatrixBenchmark.runMultiplyDense()double
dv103.benchmark.MatrixBenchmark.runMultiplySparse()double
dv103.benchmark.SquareMatrixGenerator.<init>()void
dv103.benchmark.SquareMatrixGenerator.createMatrix(dv103.Int[][])dreamer.SquareMatrix
dv103.benchmark.SquareMatrixGenerator.createMatrix(int)dreamer.SquareMatrix
dv103.benchmark.SquareMatrixGenerator.getRandomArray(int)dv103.Int[][]
dv103.benchmark.SquareMatrixGenerator.getRandomMatrix(int)dreamer.SquareMatrix
dv103.benchmark.SquareMatrixGenerator.getSparseArray(int)dv103.Int[][]
dv103.benchmark.SquareMatrixGenerator.getSparseMatrix(int)dreamer.SquareMatrix
dv103.benchmark.SquareMatrixGenerator.getSymmetricArray(int)dv103.Int[][]
dv103.benchmark.SquareMatrixGenerator.getSymmetricMatrix(int)dreamer.SquareMatrix
dv103.benchmark.SquareMatrixGenerator.randomInt()dv103.Int
dv103.test.TestSquareMatrix.<init>()void
dv103.test.TestSquareMatrix.setUp()void
dv103.test.TestSquareMatrix.setUpBeforeClass()void
dv103.test.TestSquareMatrix.tearDown()void
dv103.test.TestSquareMatrix.tearDownAfterClass()void
dv103.test.TestSquareMatrix.testBasicJavaSupport()void
dv103.test.TestSquareMatrix.testConstructors()void
dv103.test.TestSquareMatrix.testGetColumn()void
dv103.test.TestSquareMatrix.testGetCopy()void
dv103.test.TestSquareMatrix.testGetNull()void
dv103.test.TestSquareMatrix.testGetOne()void
dv103.test.TestSquareMatrix.testGetRow()void
dv103.test.TestSquareMatrix.testHashCode()void
dv103.test.TestSquareMatrix.testIsDiagonal()void
dv103.test.TestSquareMatrix.testIsSymmetric()void
dv103.test.TestSquareMatrix.testMult()void
dv103.test.TestSquareMatrix.testPlus()void
dv103.test.TestSquareMatrix.testSetAndGetElementAt()void
dv103.test.TestSquareMatrix.testSparseness()void
dv103.test.TestSquareMatrix.testSquareMatrixBasicOps()void
dv103.test.TestSquareMatrix.testTranspose()void
dv103.test.TestSquareMatrixOutput.<init>()void
dv103.test.TestSquareMatrixOutput.main(java.lang.String[])void
